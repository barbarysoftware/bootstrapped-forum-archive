<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Software vs Software + Services</title>
    <link>https://discuss.bootstrapped.fm/t/software-vs-software-services/484</link>
    <description>[Startups for the Rest of Us episode 147][1] from 1:02-5:06 had an interesting discussion/warning on how a lot of the easy pure software startups have been done, and that a model which offered software and services together might be more successful from now on:

&quot;I think [this] is the future trend because so many of the low hanging fruit Saas apps are being built and they’re done. How much more can you do with invoicing and accounting and these other things? I think that over the next few years we’re going to see these hybrid approaches because most software developers don’t want to do them because they’re messy. We want everything to be code. We want everything to scale.&quot;

&quot;So adding that human powered side to it, you just have such a chance to grow revenue faster and to offer so much more value like exponentially more value to your end customers than you can just do with code.&quot;

I&#39;m sure almost everyone here listens to their podcast, but I thought this point was worth posting as it might lead to some good thought experiments or even actionable ideas, which understandably people might not want to share:

**How would you add services to one of your businesses which is currently purely software?**  

I guess for my Chinese app, I could set up a service where people capable of handwriting Chinese are paid to offer sessions where they write characters from the set the app user is studying.  The handwritten version of a character appears in the app and the user has to guess what it is.  If they guess the wrong character, they are sent the handwritten version of the character they guessed and can see it side by side with the first handwritten character.  Wildly impractical, but an interesting thought experiment.

  [1]: http://www.startupsfortherestofus.com/episodes/episode-147-saas-pricing-segmenting-customers-selling-before-coding-and-more-listener-questions</description>
    
    <lastBuildDate>Mon, 02 Sep 2013 23:25:05 +0000</lastBuildDate>
    <category>Interesting Links</category>
    <atom:link href="https://discuss.bootstrapped.fm/t/software-vs-software-services/484.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Software vs Software + Services</title>
        <dc:creator><![CDATA[rglover]]></dc:creator>
        <description><![CDATA[
            <p>I’ve considered a “white labeling” service where I take a base version of the app, sell a license to bigger companies, and if they wish, help them brand it to their specs (for a fee).</p>
          <p><a href="https://discuss.bootstrapped.fm/t/software-vs-software-services/484/7">Read full topic</a></p>
        ]]></description>
        <link>https://discuss.bootstrapped.fm/t/software-vs-software-services/484/7</link>
        <pubDate>Mon, 02 Sep 2013 23:25:05 +0000</pubDate>
        <guid isPermaLink="false">discuss.bootstrapped.fm-post-484-7</guid>
        <source url="https://discuss.bootstrapped.fm/t/software-vs-software-services/484.rss">Software vs Software + Services</source>
      </item>
      <item>
        <title>Software vs Software + Services</title>
        <dc:creator><![CDATA[ian]]></dc:creator>
        <description><![CDATA[
            <p>Specifically about bootstrappers crowded markets are the best. You have to do zero work to get people to want this type of product as there’s already loads of companies with ads, sales people, etc. So then, all you need to do is appeal to a small group in there who are unhappy with their current option. By far the easiest way to go for a Bootstrapper and also has the highest chance for success IMHO.</p>
<p>I also tend to disagree with the concept in general since there’s always people unhappy with some aspect of the software their using and even if that software tries to be all things to all people that will make others unhappy that it’s so complex. So for bootstrappers it’s all great. I suppose if you’re trying to build a VC backed product and convince people you need 10 million to enter this very crowded field then that is an issue as the chances of you being able to give them a 100M exit are much harder. But for a bootstrapper who needs to only make a relatively minor amount of revenue in comparison it’s irrelevant I think.</p>
          <p><a href="https://discuss.bootstrapped.fm/t/software-vs-software-services/484/6">Read full topic</a></p>
        ]]></description>
        <link>https://discuss.bootstrapped.fm/t/software-vs-software-services/484/6</link>
        <pubDate>Mon, 02 Sep 2013 22:46:46 +0000</pubDate>
        <guid isPermaLink="false">discuss.bootstrapped.fm-post-484-6</guid>
        <source url="https://discuss.bootstrapped.fm/t/software-vs-software-services/484.rss">Software vs Software + Services</source>
      </item>
      <item>
        <title>Software vs Software + Services</title>
        <dc:creator><![CDATA[steve]]></dc:creator>
        <description><![CDATA[
            <p><a class="mention" href="/u/jarkko">@jarkko</a> I don’t disagree with you that there will always be room for innovation.  Perhaps it will be harder to find a sustainable niche in a crowded market, but that doesn’t mean it is impossible.</p>
<p>One other point they made in this part of the podcast is that some software imposes a burden on users: “They don’t want to pay for something that is not actually fixing something. It’s just telling them something needs to be fixed. There’s a big, big difference between those two end points.”</p>
<p>That burden can be an opportunity to provide additional services.  It can also be an opportunity for someone else to come in with an offering which addresses just the “missing service” or an offering which is a complete solution.</p>
<p>Thinking about “what burden does this software impose on users and how can I address it” is another way of looking at what services one can offer.  I read about a diet app which lets users take pictures of their food which are then sent to the company to determine the number of calories consumed.  From the reviews it doesn’t seem to work that well.  But it was at least an attempt (perhaps using Mechanical Turk) to address a burden such software normally imposes on a user (entering calories manually or finding the foods eaten from a list).</p>
<p>I also agree partnering with others is a potential way to address services, though managing the partnerships will involve some effort as well.  It does break one out of the mindset of trying to come up with solutions which are purely software, which is the key point.</p>
          <p><a href="https://discuss.bootstrapped.fm/t/software-vs-software-services/484/5">Read full topic</a></p>
        ]]></description>
        <link>https://discuss.bootstrapped.fm/t/software-vs-software-services/484/5</link>
        <pubDate>Mon, 02 Sep 2013 12:34:00 +0000</pubDate>
        <guid isPermaLink="false">discuss.bootstrapped.fm-post-484-5</guid>
        <source url="https://discuss.bootstrapped.fm/t/software-vs-software-services/484.rss">Software vs Software + Services</source>
      </item>
      <item>
        <title>Software vs Software + Services</title>
        <dc:creator><![CDATA[jarkko]]></dc:creator>
        <description><![CDATA[
            <p>I think the point made in the podcast has some merit. That said, I disagree that the low hanging fruit have or ever will be depleted. Even in our own little tech bubble/niche, the world changes so fast that new technologies, processes, and paradigms will always come and go, and they will inevitably bring more new pains to solve as well.</p>
<p>That said, a service component is definitely a moat you can build around your software to defend the business more effectively. Another option would be a platform/partnership component. For example, if you’re building accounting software and manage to partner with a bunch of accountants to use and resell it, you kind of have the service component built in your product <em>but you don’t have to do it yourself</em>.</p>
          <p><a href="https://discuss.bootstrapped.fm/t/software-vs-software-services/484/4">Read full topic</a></p>
        ]]></description>
        <link>https://discuss.bootstrapped.fm/t/software-vs-software-services/484/4</link>
        <pubDate>Mon, 02 Sep 2013 07:39:46 +0000</pubDate>
        <guid isPermaLink="false">discuss.bootstrapped.fm-post-484-4</guid>
        <source url="https://discuss.bootstrapped.fm/t/software-vs-software-services/484.rss">Software vs Software + Services</source>
      </item>
      <item>
        <title>Software vs Software + Services</title>
        <dc:creator><![CDATA[ian]]></dc:creator>
        <description><![CDATA[
            <p>Yeah, the most common scenerio’s would be things like enterprise offerings where you’re going to do installations, provide on-premise versions, provide custom API integrations, training, extended support, account managers, etc. Hubspot is already doing a fair amount of this if you take a look at what they’re up to and they charge through the nose for it <img src="https://emoji.discourse-cdn.com/twitter/smile.png?v=5" title=":smile:" class="emoji" alt=":smile:"></p>
          <p><a href="https://discuss.bootstrapped.fm/t/software-vs-software-services/484/3">Read full topic</a></p>
        ]]></description>
        <link>https://discuss.bootstrapped.fm/t/software-vs-software-services/484/3</link>
        <pubDate>Sat, 31 Aug 2013 20:38:07 +0000</pubDate>
        <guid isPermaLink="false">discuss.bootstrapped.fm-post-484-3</guid>
        <source url="https://discuss.bootstrapped.fm/t/software-vs-software-services/484.rss">Software vs Software + Services</source>
      </item>
      <item>
        <title>Software vs Software + Services</title>
        <dc:creator><![CDATA[schutzsmith]]></dc:creator>
        <description><![CDATA[
            <p>I think we’ll especially see more models like this as more web studios or ad/marketing/interactive/web agencies make the push to do more products but want to provide service as well.</p>
<p>Personally, its affirming to hear something like this because we’ve been joking internally at that, in our case with <a href="http://awesomecause.com" rel="nofollow noopener">Awesome Cause</a>, SaaS stands for <strong>Software <em>And</em> Awesome Service</strong>.</p>
          <p><a href="https://discuss.bootstrapped.fm/t/software-vs-software-services/484/2">Read full topic</a></p>
        ]]></description>
        <link>https://discuss.bootstrapped.fm/t/software-vs-software-services/484/2</link>
        <pubDate>Sat, 31 Aug 2013 19:03:43 +0000</pubDate>
        <guid isPermaLink="false">discuss.bootstrapped.fm-post-484-2</guid>
        <source url="https://discuss.bootstrapped.fm/t/software-vs-software-services/484.rss">Software vs Software + Services</source>
      </item>
      <item>
        <title>Software vs Software + Services</title>
        <dc:creator><![CDATA[steve]]></dc:creator>
        <description><![CDATA[
            <p><a href="http://www.startupsfortherestofus.com/episodes/episode-147-saas-pricing-segmenting-customers-selling-before-coding-and-more-listener-questions" rel="nofollow noopener">Startups for the Rest of Us episode 147</a> from 1:02-5:06 had an interesting discussion/warning on how a lot of the easy pure software startups have been done, and that a model which offered software and services together might be more successful from now on:</p>
<p>“I think [this] is the future trend because so many of the low hanging fruit Saas apps are being built and they’re done. How much more can you do with invoicing and accounting and these other things? I think that over the next few years we’re going to see these hybrid approaches because most software developers don’t want to do them because they’re messy. We want everything to be code. We want everything to scale.”</p>
<p>“So adding that human powered side to it, you just have such a chance to grow revenue faster and to offer so much more value like exponentially more value to your end customers than you can just do with code.”</p>
<p>I’m sure almost everyone here listens to their podcast, but I thought this point was worth posting as it might lead to some good thought experiments or even actionable ideas, which understandably people might not want to share:</p>
<p><strong>How would you add services to one of your businesses which is currently purely software?</strong></p>
<p>I guess for my Chinese app, I could set up a service where people capable of handwriting Chinese are paid to offer sessions where they write characters from the set the app user is studying.  The handwritten version of a character appears in the app and the user has to guess what it is.  If they guess the wrong character, they are sent the handwritten version of the character they guessed and can see it side by side with the first handwritten character.  Wildly impractical, but an interesting thought experiment.</p>
          <p><a href="https://discuss.bootstrapped.fm/t/software-vs-software-services/484/1">Read full topic</a></p>
        ]]></description>
        <link>https://discuss.bootstrapped.fm/t/software-vs-software-services/484/1</link>
        <pubDate>Sat, 31 Aug 2013 16:42:13 +0000</pubDate>
        <guid isPermaLink="false">discuss.bootstrapped.fm-post-484-1</guid>
        <source url="https://discuss.bootstrapped.fm/t/software-vs-software-services/484.rss">Software vs Software + Services</source>
      </item>
  </channel>
</rss>
